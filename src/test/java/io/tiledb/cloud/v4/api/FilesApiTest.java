/*
 * Specification file for tiledb-server v4 API
 * This spec is exposed to the public under /v4 route group
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@tiledb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tiledb.cloud.v4.api;

import io.tiledb.cloud.v4.ApiException;
import io.tiledb.cloud.v4.model.ErrorXML;
import java.io.File;
import io.tiledb.cloud.v4.model.FileListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FilesApi
 */
@Disabled
public class FilesApiTest {

    private final FilesApi api = new FilesApi();

    /**
     * Download the file at the given path
     *
     * End point to download the file at the given path 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileGetTest() throws ApiException {
        String workspace = null;
        String teamspace = null;
        String path = null;
        String range = null;
        api.fileGet(workspace, teamspace, path, range);
        // TODO: test validations
    }

    /**
     * Get information about the file at the given path
     *
     * End point to get information about the file at the given path 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void fileHeadTest() throws ApiException {
        String workspace = null;
        String teamspace = null;
        String path = null;
        api.fileHead(workspace, teamspace, path);
        // TODO: test validations
    }

    /**
     * List folders and files contained in a folder
     *
     * End point to list files and folders for the passed teamspace 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void folderListTest() throws ApiException {
        String workspace = null;
        String teamspace = null;
        Integer listType = null;
        String delimiter = null;
        String prefix = null;
        Integer maxKeys = null;
        String continuationToken = null;
        FileListResponse response = api.folderList(workspace, teamspace, listType, delimiter, prefix, maxKeys, continuationToken);
        // TODO: test validations
    }

    /**
     * Upload Part
     *
     * Uploads a part in a multipart upload session.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void uploadPartTest() throws ApiException {
        String workspace = null;
        String teamspace = null;
        String path = null;
        File body = null;
        api.uploadPart(workspace, teamspace, path, body);
        // TODO: test validations
    }

}
