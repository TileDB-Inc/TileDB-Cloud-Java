/*
 * Specification file for tiledb-server v4 API
 * This spec is exposed to the public under /v4 route group
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@tiledb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tiledb.cloud.v4.api;

import io.tiledb.cloud.v4.ApiException;
import io.tiledb.cloud.v4.model.CloudProvider;
import io.tiledb.cloud.v4.model.CredentialCreateRequest;
import io.tiledb.cloud.v4.model.CredentialGetResponse;
import io.tiledb.cloud.v4.model.CredentialUpdateRequest;
import io.tiledb.cloud.v4.model.CredentialsListResponse;
import io.tiledb.cloud.v4.model.CredentialsVerifyRequest;
import io.tiledb.cloud.v4.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CredentialsApi
 */
@Disabled
public class CredentialsApiTest {

    private final CredentialsApi api = new CredentialsApi();

    /**
     * Create a credential
     *
     * create a new credential, the user will create a new credential to access assets
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCredentialTest() throws ApiException {
        String workspace = null;
        CredentialCreateRequest credentialCreateRequest = null;
        String teamspaceId = null;
        api.createCredential(workspace, credentialCreateRequest, teamspaceId);
        // TODO: test validations
    }

    /**
     * Delete user credential
     *
     * Delete the named access credential. Any arrays still set to use this credential will use the user&#39;s default and may become unreachable
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCredentialByNameTest() throws ApiException {
        String workspace = null;
        String name = null;
        String teamspaceId = null;
        api.deleteCredentialByName(workspace, name, teamspaceId);
        // TODO: test validations
    }

    /**
     * Get user credential
     *
     * get information about user credential by name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCredentialByNameTest() throws ApiException {
        String workspace = null;
        String name = null;
        String teamspaceId = null;
        CredentialGetResponse response = api.getCredentialByName(workspace, name, teamspaceId);
        // TODO: test validations
    }

    /**
     * Get user credentials
     *
     * list the credentials available for the user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCredentialsTest() throws ApiException {
        String workspace = null;
        String teamspaceId = null;
        CloudProvider provider = null;
        String type = null;
        Integer page = null;
        Integer perPage = null;
        CredentialsListResponse response = api.getCredentials(workspace, teamspaceId, provider, type, page, perPage);
        // TODO: test validations
    }

    /**
     * Update user credential
     *
     * update user credential given by the user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchCredentialByNameTest() throws ApiException {
        String workspace = null;
        String name = null;
        CredentialUpdateRequest credentialUpdateRequest = null;
        String teamspaceId = null;
        api.patchCredentialByName(workspace, name, credentialUpdateRequest, teamspaceId);
        // TODO: test validations
    }

    /**
     * Verify a given credential
     *
     * verify the credentials connection for a namespace
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void verifyCredentialTest() throws ApiException {
        String workspace = null;
        CredentialsVerifyRequest credentialsVerifyRequest = null;
        String teamspaceId = null;
        api.verifyCredential(workspace, credentialsVerifyRequest, teamspaceId);
        // TODO: test validations
    }

}
