/*
 * Specification file for tiledb-server v4 API
 * This spec is exposed to the public under /v4 route group
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@tiledb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tiledb.cloud.v4.api;

import io.tiledb.cloud.v4.ApiException;
import io.tiledb.cloud.v4.model.AcademyLesson;
import io.tiledb.cloud.v4.model.AcademyLessonsListResponse;
import io.tiledb.cloud.v4.model.AcademyQuestionnaireListResponse;
import io.tiledb.cloud.v4.model.AcademyQuestionnairePutRequest;
import io.tiledb.cloud.v4.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AcademyApi
 */
@Disabled
public class AcademyApiTest {

    private final AcademyApi api = new AcademyApi();

    /**
     * Get information about user lessons
     *
     * Get a list of user lessons with details about each of them
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAcademyLessonsTest() throws ApiException {
        AcademyLessonsListResponse response = api.getAcademyLessons();
        // TODO: test validations
    }

    /**
     * Get academy questionnaire information for user
     *
     * Get academy questionnaire information for user. For example, questionnaire version, completion status and user answers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAcademyQuestionnaireTest() throws ApiException {
        String questionnaireId = null;
        AcademyQuestionnaireListResponse response = api.getAcademyQuestionnaire(questionnaireId);
        // TODO: test validations
    }

    /**
     * Academy lessons to create
     *
     * Create one or more user lessons
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putAcademyLessonsTest() throws ApiException {
        List<AcademyLesson> academyLesson = null;
        api.putAcademyLessons(academyLesson);
        // TODO: test validations
    }

    /**
     * Create or update academy questionnaire
     *
     * Create a new questionnaire or update an existing one
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void putAcademyQuestionnaireTest() throws ApiException {
        String questionnaireId = null;
        AcademyQuestionnairePutRequest academyQuestionnairePutRequest = null;
        api.putAcademyQuestionnaire(questionnaireId, academyQuestionnairePutRequest);
        // TODO: test validations
    }

}
