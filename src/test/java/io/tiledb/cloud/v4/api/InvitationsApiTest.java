/*
 * Specification file for tiledb-server v4 API
 * This spec is exposed to the public under /v4 route group
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@tiledb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tiledb.cloud.v4.api;

import io.tiledb.cloud.v4.ApiException;
import io.tiledb.cloud.v4.model.Error;
import io.tiledb.cloud.v4.model.InvitationRespondRequest;
import io.tiledb.cloud.v4.model.InvitationRetrieveRequest;
import io.tiledb.cloud.v4.model.InvitationRetrieveResponse;
import io.tiledb.cloud.v4.model.InvitationsCreateRequestInner;
import io.tiledb.cloud.v4.model.InvitationsListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InvitationsApi
 */
@Disabled
public class InvitationsApiTest {

    private final InvitationsApi api = new InvitationsApi();

    /**
     * Create one or more invitations
     *
     * Create one or more invitations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createInvitationsTest() throws ApiException {
        String workspace = null;
        List<InvitationsCreateRequestInner> invitationsCreateRequestInner = null;
        api.createInvitations(workspace, invitationsCreateRequestInner);
        // TODO: test validations
    }

    /**
     * Retrieve an invitation
     *
     * Invitee retrieves an invitation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInvitationTest() throws ApiException {
        String invitationId = null;
        InvitationRetrieveRequest invitationRetrieveRequest = null;
        InvitationRetrieveResponse response = api.getInvitation(invitationId, invitationRetrieveRequest);
        // TODO: test validations
    }

    /**
     * Retrieve all sent invitations
     *
     * Retrieve all invitations that the user has sent
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listInvitationsTest() throws ApiException {
        String workspace = null;
        Integer page = null;
        Integer perPage = null;
        InvitationsListResponse response = api.listInvitations(workspace, page, perPage);
        // TODO: test validations
    }

    /**
     * Respond to an invitation
     *
     * Invitee responds to an invitation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void respondInvitationTest() throws ApiException {
        String invitationId = null;
        InvitationRespondRequest invitationRespondRequest = null;
        api.respondInvitation(invitationId, invitationRespondRequest);
        // TODO: test validations
    }

    /**
     * Revoke an invitation
     *
     * Inviter revokes a previously-sent invitation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void revokeInvitationTest() throws ApiException {
        String workspace = null;
        String invitationId = null;
        api.revokeInvitation(workspace, invitationId);
        // TODO: test validations
    }

}
