/*
 * Specification file for tiledb-server v4 API
 * This spec is exposed to the public under /v4 route group
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: info@tiledb.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tiledb.cloud.v4.api;

import io.tiledb.cloud.v4.ApiException;
import io.tiledb.cloud.v4.model.Error;
import io.tiledb.cloud.v4.model.WorkspaceCreateRequest;
import io.tiledb.cloud.v4.model.WorkspaceCreateResponse;
import io.tiledb.cloud.v4.model.WorkspaceGetResponse;
import io.tiledb.cloud.v4.model.WorkspaceUpdateRequest;
import io.tiledb.cloud.v4.model.WorkspaceUserGetResponse;
import io.tiledb.cloud.v4.model.WorkspaceUserUpdateRequest;
import io.tiledb.cloud.v4.model.WorkspaceUsersBulkUpdateRequestInner;
import io.tiledb.cloud.v4.model.WorkspaceUsersCreateRequestInner;
import io.tiledb.cloud.v4.model.WorkspaceUsersCreateResponse;
import io.tiledb.cloud.v4.model.WorkspaceUsersListResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WorkspacesApi
 */
@Disabled
public class WorkspacesApiTest {

    private final WorkspacesApi api = new WorkspacesApi();

    /**
     * Create a workspace
     *
     * create a workspace, the user creating will be listed as owner
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWorkspaceTest() throws ApiException {
        WorkspaceCreateRequest workspaceCreateRequest = null;
        WorkspaceCreateResponse response = api.createWorkspace(workspaceCreateRequest);
        // TODO: test validations
    }

    /**
     * Create one or more workspace users
     *
     * Create one or more workspace users
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWorkspaceUsersTest() throws ApiException {
        String workspace = null;
        List<WorkspaceUsersCreateRequestInner> workspaceUsersCreateRequestInner = null;
        WorkspaceUsersCreateResponse response = api.createWorkspaceUsers(workspace, workspaceUsersCreateRequestInner);
        // TODO: test validations
    }

    /**
     * Delete a workspace
     *
     * delete a workspace
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWorkspaceTest() throws ApiException {
        String workspace = null;
        api.deleteWorkspace(workspace);
        // TODO: test validations
    }

    /**
     * Delete a workspace user
     *
     * Delete the given workspace user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWorkspaceUserTest() throws ApiException {
        String workspace = null;
        String userId = null;
        api.deleteWorkspaceUser(workspace, userId);
        // TODO: test validations
    }

    /**
     * Delete the given workspace users in a workspace
     *
     * Delete the given workspace users in a workspace
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWorkspaceUsersTest() throws ApiException {
        String workspace = null;
        List<String> requestBody = null;
        api.deleteWorkspaceUsers(workspace, requestBody);
        // TODO: test validations
    }

    /**
     * Retrieves metadata for the given workspace
     *
     * End point to retrieve metadata for the passed workspace 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkspaceTest() throws ApiException {
        String workspace = null;
        WorkspaceGetResponse response = api.getWorkspace(workspace);
        // TODO: test validations
    }

    /**
     * Retrieve a workspace user
     *
     * Retrieve the given workspace user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkspaceUserTest() throws ApiException {
        String workspace = null;
        String userId = null;
        WorkspaceUserGetResponse response = api.getWorkspaceUser(workspace, userId);
        // TODO: test validations
    }

    /**
     * Retrieve multiple workspace users
     *
     * Retrieve a list of workspace users
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWorkspaceUsersTest() throws ApiException {
        String workspace = null;
        Integer page = null;
        Integer perPage = null;
        WorkspaceUsersListResponse response = api.listWorkspaceUsers(workspace, page, perPage);
        // TODO: test validations
    }

    /**
     * Update a workspace
     *
     * update a workspace
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorkspaceTest() throws ApiException {
        String workspace = null;
        WorkspaceUpdateRequest workspaceUpdateRequest = null;
        api.updateWorkspace(workspace, workspaceUpdateRequest);
        // TODO: test validations
    }

    /**
     * Update a workspace user
     *
     * Update the given workspace user
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorkspaceUserTest() throws ApiException {
        String workspace = null;
        String userId = null;
        WorkspaceUserUpdateRequest workspaceUserUpdateRequest = null;
        api.updateWorkspaceUser(workspace, userId, workspaceUserUpdateRequest);
        // TODO: test validations
    }

    /**
     * Update multiple workspace users in a workspace
     *
     * Update multiple workspace users in a workspace
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWorkspaceUsersTest() throws ApiException {
        String workspace = null;
        List<WorkspaceUsersBulkUpdateRequestInner> workspaceUsersBulkUpdateRequestInner = null;
        api.updateWorkspaceUsers(workspace, workspaceUsersBulkUpdateRequestInner);
        // TODO: test validations
    }

}
