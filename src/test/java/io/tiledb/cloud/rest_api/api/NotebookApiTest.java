/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.17.51
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tiledb.cloud.rest_api.api;

import io.tiledb.cloud.rest_api.ApiException;
import io.tiledb.cloud.rest_api.model.ArrayInfoUpdate;
import io.tiledb.cloud.rest_api.model.Error;
import java.io.File;
import io.tiledb.cloud.rest_api.model.FileUploaded;
import io.tiledb.cloud.rest_api.model.NotebookCopied;
import io.tiledb.cloud.rest_api.model.NotebookCopy;
import io.tiledb.cloud.rest_api.model.NotebookStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NotebookApi
 */
@Disabled
public class NotebookApiTest {

    private final NotebookApi api = new NotebookApi();

    /**
     * Get status of the notebook server
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNotebookServerStatusTest() throws ApiException {
        String workspace = null;
        String teamspace = null;
        NotebookStatus response = api.getNotebookServerStatus(workspace, teamspace);
        // TODO: test validations
    }

    /**
     * Copy a tiledb notebook at the specified location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void handleCopyNotebookTest() throws ApiException {
        String workspace = null;
        String teamspace = null;
        String array = null;
        NotebookCopy notebookCopy = null;
        String X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME = null;
        Integer endTimestamp = null;
        NotebookCopied response = api.handleCopyNotebook(workspace, teamspace, array, notebookCopy, X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME, endTimestamp);
        // TODO: test validations
    }

    /**
     * Upload a notebook at the specified location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void handleUploadNotebookTest() throws ApiException {
        String workspace = null;
        String teamspace = null;
        File inputFile = null;
        String X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME = null;
        String outputUri = null;
        String name = null;
        FileUploaded response = api.handleUploadNotebook(workspace, teamspace, inputFile, X_TILEDB_CLOUD_ACCESS_CREDENTIALS_NAME, outputUri, name);
        // TODO: test validations
    }

    /**
     * Shutdown a notebook server
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void shutdownNotebookServerTest() throws ApiException {
        String workspace = null;
        String teamspace = null;
        api.shutdownNotebookServer(workspace, teamspace);
        // TODO: test validations
    }

    /**
     * update name on a notebok, moving related S3 object to new location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateNotebookNameTest() throws ApiException {
        String workspace = null;
        String teamspace = null;
        String array = null;
        ArrayInfoUpdate notebookMetadata = null;
        api.updateNotebookName(workspace, teamspace, array, notebookMetadata);
        // TODO: test validations
    }

}
