/*
 * TileDB Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 2.17.51
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tiledb.cloud.rest_api.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * actions a user can take on an organization
 */
@JsonAdapter(NamespaceActions.Adapter.class)
public enum NamespaceActions {
  
  READ("read"),
  
  WRITE("write"),
  
  CREATE("create"),
  
  DELETE("delete"),
  
  EDIT("edit"),
  
  READ_ARRAY_LOGS("read_array_logs"),
  
  READ_JOB_LOGS("read_job_logs"),
  
  READ_OBJECT_LOGS("read_object_logs"),
  
  RUN_JOB("run_job"),
  
  DELETE_ORGANIZATION("delete_organization"),
  
  EDIT_ORGANIZATION("edit_organization"),
  
  EDIT_BILLING("edit_billing");

  private String value;

  NamespaceActions(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static NamespaceActions fromValue(String value) {
    for (NamespaceActions b : NamespaceActions.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<NamespaceActions> {
    @Override
    public void write(final JsonWriter jsonWriter, final NamespaceActions enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public NamespaceActions read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return NamespaceActions.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    NamespaceActions.fromValue(value);
  }
}

