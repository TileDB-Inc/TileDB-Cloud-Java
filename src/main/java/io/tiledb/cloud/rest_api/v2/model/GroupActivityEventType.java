/*
 * Tiledb Storage Platform API
 * TileDB Storage Platform REST API
 *
 * The version of the OpenAPI document: 1.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.tiledb.cloud.rest_api.v2.model;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Event type of Group activity
 */
@JsonAdapter(GroupActivityEventType.Adapter.class)
public enum GroupActivityEventType {
  
  CREATE("create"),
  
  UPDATE("update"),
  
  DELETE("delete"),
  
  REGISTER("register"),
  
  DEREGISTER("deregister"),
  
  GROUP_MEMBER_ADD("group_member_add"),
  
  GROUP_MEMBER_GET("group_member_get"),
  
  GROUP_MEMBER_REMOVE("group_member_remove"),
  
  GROUP_METADATA_GET("group_metadata_get"),
  
  GROUP_METADATA_UPDATE("group_metadata_update"),
  
  GROUP_METADATA_DELETE("group_metadata_delete"),
  
  GROUP_METADATA_SERIALIZE("group_metadata_serialize"),
  
  GROUP_METADATA_DESERIALIZE("group_metadata_deserialize"),
  
  GROUP_METADATA_CONSOLIDATE("group_metadata_consolidate"),
  
  GROUP_METADATA_VACUUM("group_metadata_vacuum"),
  
  CONFIG_SET("config_set"),
  
  CONFIG_GET("config_get");

  private String value;

  GroupActivityEventType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static GroupActivityEventType fromValue(String value) {
    for (GroupActivityEventType b : GroupActivityEventType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<GroupActivityEventType> {
    @Override
    public void write(final JsonWriter jsonWriter, final GroupActivityEventType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public GroupActivityEventType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return GroupActivityEventType.fromValue(value);
    }
  }
}

