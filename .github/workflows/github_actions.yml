name: TileDB-Cloud-Java

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
    branches:
      - master
      - test-*
  pull_request:

jobs:
  Examples:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17
          check-latest: true

      - name: assemble
        shell: bash
        run: |
          unset SYSTEM
          ./gradlew assemble

      - name: Run examples
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
        run: |
          jar_relpath="$(find build/libs -type f | grep -v -e javadoc -e sources -e default)"
          jar="$(readlink -f "$jar_relpath")"
          cd src/main/java/examples
          javac -cp "$jar" Examples.java
          # arrow-java requires the --add-opens flag in Java â‰¥16; see https://arrow.apache.org/docs/java/install.html#id3
          java --add-opens=java.base/java.nio=org.apache.arrow.memory.core,ALL-UNNAMED -cp "$jar" examples.Examples
  Release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: [Examples]
    name: Create-Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: 17
          check-latest: true

      - name: Create JARs
        run: |
          unset SYSTEM
          ./gradlew assemble
          ./gradlew shadowJar
          mkdir jars/
          cp ./build/libs/*.jar jars/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: jars/*.jar
          tag_name: ${{ github.event.release.tag_name }}
          name: ${{ github.event.release.tag_name }}
          draft: false
          prerelease: false

      - name: Upload to maven
        run: ./ci/upload_to_maven.sh
        shell: bash
        env:
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          GPG_SECRET_KEYS_ENC: ${{ secrets.GPG_SECRET_KEYS_ENC }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
